Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.

没有排序？有duplicate？
时间复杂度nlog(N)+O(n^2) => 先排序

class Solution {
    public int triangleNumber(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        Arrays.sort(nums);
        
        int count = 0;
        for (int i = nums.length - 1; i > 1; i--) { ／／固定第三条边
            count += countTriangle(nums, i);
        }
        return count;
        
    }
    
    private int countTriangle(int[] nums, int index) {
        int start = 0, end = index - 1;
        int thirdLength = nums[index];
        int res = 0;
        while (start < end) {
            if (nums[start] + nums[end] > thirdLength) {
                res += end - start; ／／只看个数，比第一条边大的数一定可以组成三角形。
                end--; //移动第二条边
            }
            else {
                start++; //太小的话就增加第一条边
            }
        }
        return res;
    }
}
