描述
给一个数组 nums 写一个函数将 0 移动到数组的最后面，非零元素保持原数组的顺序

两个指针，一块一慢，快指针每次循环+1，慢指针只有在遇到非0数的时候+1，遇到非0，和慢指针交换，这样就把所有非零值提前，快指针结束增加之后，后面所有值都是0.

空间复杂度：O(1)

时间复杂度：O(N)

public class Solution {
    /**
     * @param nums: an integer array
     * @return: nothing
     */
    public void moveZeroes(int[] nums) {
        // write your code here
        if (nums == null || nums.length == 0) {
            return;
        }
        int slow = 0, fast = 0;
        while (fast < nums.length) {
            if (nums[fast] != 0) {
                nums[slow] = nums[fast];
                slow++;
            }
            fast++;
        }

        while (slow < nums.length) {
            nums[slow] = 0;
            slow++;
        }
    }
}
